import{r as n,j as g}from"./iframe-ZNmblBjt.js";const M=(e,t)=>({deltaX:t.x-e.x,deltaY:t.y-e.y}),f=(e,t,o)=>Math.min(o,Math.max(t,e)),P=(e,t,o,r)=>{const c=e.x+e.width,a=e.y+e.height;return{x:{min:Math.ceil(o.x+(t.x-e.x)),max:Math.floor(r.x-(c-t.x))},y:{min:Math.ceil(o.y+(t.y-e.y)),max:Math.floor(r.y-(a-t.y))}}},R=n.createContext(null),D=()=>{const e=n.useContext(R);if(e===null)throw new Error("Draggable compound components must be rendered within the Draggable component");return e},m=n.forwardRef(({children:e,style:t,...o},r)=>{const[c,a]=n.useState({x:0,y:0}),l=n.useRef(null),u=`translate3d(${c.x}px, ${c.y}px, 0px)`,x=n.useMemo(()=>({setShift:a,draggableRef:l}),[]),p=n.useCallback(d=>{typeof r=="function"?r(d):r&&(r.current=d),l.current=d},[r]);return g.jsx(R.Provider,{value:x,children:g.jsx("div",{ref:p,style:{...t,transform:u},...o,children:e})})}),h=({children:e})=>{const[t,o]=n.useState(!1),r=n.useRef(null),c=n.useRef({x:0,y:0}),a=n.useRef({x:{min:0,max:0},y:{min:0,max:0}}),{setShift:l,draggableRef:u}=D(),x=n.useCallback(s=>{if(r.current===null||u.current===null)return;o(!0),r.current.setPointerCapture(s.pointerId);const i={x:Math.round(s.clientX),y:Math.round(s.clientY)};c.current=i;const y=u.current.getBoundingClientRect();a.current=P(y,i,{x:0,y:0},{x:window.innerWidth,y:window.innerHeight})},[u]),p=n.useCallback(s=>{if(t){const i={x:f(Math.round(s.clientX),a.current.x.min,a.current.x.max),y:f(Math.round(s.clientY),a.current.y.min,a.current.y.max)},{deltaX:y,deltaY:_}=M(c.current,i);c.current=i,l(({x:w,y:C})=>({x:w+y,y:C+_}))}},[t,l]),d=n.useCallback(s=>{var i;(i=r.current)==null||i.releasePointerCapture(s.pointerId),o(!1)},[]),b=n.useCallback(()=>{o(!1)},[]);return g.jsx("div",{ref:r,onPointerDown:x,onPointerUp:d,onPointerMove:p,onLostPointerCapture:b,style:{cursor:t?"grabbing":"grab",userSelect:"none"},children:e})};try{m.displayName="Root",m.__docgenInfo={description:"",displayName:"Root",props:{popover:{defaultValue:null,description:"",name:"popover",required:!1,type:{name:'"hint" | "manual" | "auto"'}}}}}catch{}try{h.displayName="Handle",h.__docgenInfo={description:"",displayName:"Handle",props:{}}}catch{}export{h as H,m as R};
